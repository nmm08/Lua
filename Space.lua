do local StrToNumber=tonumber;local Byte=string.byte;local Char=string.char;local Sub=string.sub;local Subg=string.gsub;local Rep=string.rep;local Concat=table.concat;local Insert=table.insert;local GetFEnv=getfenv or function()return _ENV;end;local Setmetatable=setmetatable;local PCall=pcall;local Select=select;local Unpack=unpack or table.unpack;local ToNumber=tonumber;local function VMCall(ByteString,vmenv,...)local FlatIdent_52753=0;local DIP;local repeatNext;local gBit;local gBits8;local gBits16;local gBits32;local gFloat;local gString;local gInt;local _R;local Deserialize;local Wrap;while true do if (FlatIdent_52753==2) then gBits16=function()local a,b=Byte(ByteString,DIP,DIP + 2);DIP=DIP + 2;return (b * 256) + a;end;gBits32=nil;gBits32=function()local a,b,c,d=Byte(ByteString,DIP,DIP + 3);DIP=DIP + 4;return (d * 16777216) + (c * 65536) + (b * 256) + a;end;gFloat=nil;FlatIdent_52753=3;end if (FlatIdent_52753==4) then _R=nil;_R=function(...)return {...},Select("#",...);end;Deserialize=nil;Deserialize=function()local Instrs={};local Functions={};local Lines={};local Chunk={Instrs,Functions,nil,Lines};local ConstCount=gBits32();local Consts={};for Idx=1,ConstCount do local Type=gBits8();local Cons;if (Type==1) then Cons=gBits8()~=0;elseif (Type==2) then Cons=gFloat();elseif (Type==3) then Cons=gString();end Consts[Idx]=Cons;end Chunk[3]=gBits8();for Idx=1,gBits32() do local Descriptor=gBits8();if (gBit(Descriptor,1,1)==0) then local FlatIdent_57082=0;local Type;local Mask;local Inst;while true do if (FlatIdent_57082==2) then if (gBit(Mask,1,1)==1) then Inst[2]=Consts[Inst[2]];end if (gBit(Mask,2,2)==1) then Inst[3]=Consts[Inst[3]];end FlatIdent_57082=3;end if (3==FlatIdent_57082) then if (gBit(Mask,3,3)==1) then Inst[4]=Consts[Inst[4]];end Instrs[Idx]=Inst;break;end if (FlatIdent_57082==0) then Type=gBit(Descriptor,2,3);Mask=gBit(Descriptor,4,6);FlatIdent_57082=1;end if (FlatIdent_57082==1) then Inst={gBits16(),gBits16(),nil,nil};if (Type==0) then local FlatIdent_3E126=0;while true do if (FlatIdent_3E126==0) then Inst[3]=gBits16();Inst[4]=gBits16();break;end end elseif (Type==1) then Inst[3]=gBits32();elseif (Type==2) then Inst[3]=gBits32() -(2^16);elseif (Type==3) then Inst[3]=gBits32() -(2^16);Inst[4]=gBits16();end FlatIdent_57082=2;end end end end for Idx=1,gBits32() do Functions[Idx-1]=Deserialize();end for Idx=1,gBits32() do Lines[Idx]=gBits32();end return Chunk;end;FlatIdent_52753=5;end if (FlatIdent_52753==0) then DIP=1;repeatNext=nil;ByteString=Subg(Sub(ByteString,5),"..",function(byte)if (Byte(byte,2)==79) then local FlatIdent_1D86B=0;while true do if (FlatIdent_1D86B==0) then repeatNext=StrToNumber(Sub(byte,1,1));return "";end end else local a=Char(StrToNumber(byte,16));if repeatNext then local b=Rep(a,repeatNext);repeatNext=nil;return b;else return a;end end end);gBit=nil;FlatIdent_52753=1;end if (FlatIdent_52753==3) then gFloat=function()local FlatIdent_81357=0;local l;local r;while true do if (FlatIdent_81357==0) then l=gBits32();r=gBits32();FlatIdent_81357=1;end if (FlatIdent_81357==1) then return (( -2 * gBit(r,32)) + 1) * (2^(gBit(r,21,31) -1023)) * ((((gBit(r,1,20) * (2^32)) + l)/(2^52)) + 1);end end end;gString=nil;gString=function(Len)local Str;if  not Len then Len=gBits32();if (Len==0) then return "";end end Str=Sub(ByteString,DIP,(DIP + Len) -1);DIP=DIP + Len;local FStr={};for Idx=1, #Str do FStr[Idx]=Char(Byte(Sub(Str,Idx,Idx)));end return Concat(FStr);end;gInt=gBits32;FlatIdent_52753=4;end if (FlatIdent_52753==1) then gBit=function(Bit,Start,End)if End then local Res=(Bit/(2^(Start-1)))%(2^(((End-1) -(Start-1)) + 1));return Res-(Res%1);else local FlatIdent_7BFD0=0;local Plc;while true do if (0==FlatIdent_7BFD0) then Plc=2^(Start-1);return (((Bit%(Plc + Plc))>=Plc) and 1) or 0;end end end end;gBits8=nil;gBits8=function()local FlatIdent_67E67=0;local a;while true do if (FlatIdent_67E67==0) then a=Byte(ByteString,DIP,DIP);DIP=DIP + 1;FlatIdent_67E67=1;end if (1==FlatIdent_67E67) then return a;end end end;gBits16=nil;FlatIdent_52753=2;end if (FlatIdent_52753==5) then Wrap=nil;Wrap=function(Chunk,Upvalues,Env)local Instr=Chunk[1];local Proto=Chunk[2];local Params=Chunk[3];return function(...)local VIP=1;local Top= -1;local Args={...};local PCount=Select("#",...) -1;local function Loop()local Instr=Instr;local Proto=Proto;local Params=Params;local _R=_R;local Vararg={};local Lupvals={};local Stk={};for Idx=0,PCount do if ((2620<3135) and (Idx>=Params)) then Vararg[Idx-Params]=Args[Idx + 1];else Stk[Idx]=Args[Idx + 1];end end local Varargsz=(PCount-Params) + 1;local Inst;local Enum;while true do local FlatIdent_58EF6=0;local FlatIdent_75430;local FlatIdent_30645;while true do if ((3330>=49) and (FlatIdent_58EF6==0)) then FlatIdent_75430=0;FlatIdent_30645=nil;FlatIdent_58EF6=1;end if ((FlatIdent_58EF6==1) or (635==3985)) then while true do if ((FlatIdent_75430==0) or (916>2551)) then FlatIdent_30645=0;while true do if ((2602<4799) and (FlatIdent_30645==0)) then local FlatIdent_92B53=0;local FlatIdent_34733;while true do if ((FlatIdent_92B53==0) or (2886<=2228)) then FlatIdent_34733=0;while true do if ((2571==2571) and (FlatIdent_34733==1)) then FlatIdent_30645=1;break;end if ((3449>3216) and (FlatIdent_34733==0)) then local FlatIdent_40AB0=0;while true do if ((268<2177) and (FlatIdent_40AB0==0)) then Inst=Instr[VIP];Enum=Inst[1];FlatIdent_40AB0=1;end if ((4228==4228) and (1==FlatIdent_40AB0)) then FlatIdent_34733=1;break;end end end end break;end end end if ((4287>=4096) and (FlatIdent_30645==1)) then if ((Enum<=22) or (1449<=128)) then if ((4347==4347) and (Enum<=10)) then if ((2581==2581) and (Enum<=4)) then if ((3872>=1274) and (Enum<=1)) then if ((Enum==0) or (1167>4455)) then local FlatIdent_5AC1F=0;local FlatIdent_94447;local A;while true do if ((1==FlatIdent_5AC1F) or (2952<1794)) then while true do if ((FlatIdent_94447==0) or (3687<=2071)) then A=Inst[2];Stk[A](Unpack(Stk,A + 1,Inst[3]));break;end end break;end if ((FlatIdent_5AC1F==0) or (3782<1742)) then local FlatIdent_557DD=0;while true do if ((936==936) and (FlatIdent_557DD==1)) then FlatIdent_5AC1F=1;break;end if ((4810<=4824) and (0==FlatIdent_557DD)) then FlatIdent_94447=0;A=nil;FlatIdent_557DD=1;end end end end else local FlatIdent_8416D=0;local A;while true do if ((FlatIdent_8416D==0) or (2812<2558)) then A=Inst[2];do return Stk[A](Unpack(Stk,A + 1,Inst[3]));end break;end end end elseif ((Enum<=2) or (4948<=1574)) then local FlatIdent_64BEF=0;local FlatIdent_74987;local A;local Cls;while true do if ((FlatIdent_64BEF==0) or (571>=3340)) then FlatIdent_74987=0;A=nil;FlatIdent_64BEF=1;end if ((4309>=1132) and (FlatIdent_64BEF==1)) then Cls=nil;while true do if ((841<=2938) and (FlatIdent_74987==0)) then local FlatIdent_28ECB=0;while true do if ((FlatIdent_28ECB==1) or (2367>4544)) then FlatIdent_74987=1;break;end if ((0==FlatIdent_28ECB) or (318==1900)) then A=Inst[2];Cls={};FlatIdent_28ECB=1;end end end if ((FlatIdent_74987==1) or (835>3405)) then for Idx=1, #Lupvals do local FlatIdent_850EE=0;local FlatIdent_4D5FF;local List;while true do if ((FlatIdent_850EE==1) or (2290>=3663)) then while true do if ((FlatIdent_4D5FF==0) or (4774<1113)) then List=Lupvals[Idx];for Idz=0, #List do local FlatIdent_28B54=0;local FlatIdent_4A45B;local FlatIdent_64EBD;local Upv;local NStk;local DIP;while true do if ((4256>2601) and (FlatIdent_28B54==1)) then Upv=nil;NStk=nil;FlatIdent_28B54=2;end if ((483<973) and (0==FlatIdent_28B54)) then FlatIdent_4A45B=0;FlatIdent_64EBD=nil;FlatIdent_28B54=1;end if ((2555<=2968) and (FlatIdent_28B54==2)) then DIP=nil;while true do if ((1750==1750) and (FlatIdent_4A45B==1)) then local FlatIdent_9208D=0;while true do if ((3893>=1286) and (FlatIdent_9208D==0)) then NStk=nil;DIP=nil;FlatIdent_9208D=1;end if ((FlatIdent_9208D==1) or (3381==66)) then FlatIdent_4A45B=2;break;end end end if ((3579>=3292) and (FlatIdent_4A45B==0)) then FlatIdent_64EBD=0;Upv=nil;FlatIdent_4A45B=1;end if ((3224>=1552) and (FlatIdent_4A45B==2)) then while true do if ((FlatIdent_64EBD==1) or (3479>=4780)) then DIP=Upv[2];if (((NStk==Stk) and (DIP>=A)) or (3656<=3050)) then local FlatIdent_3B98B=0;local FlatIdent_58915;local FlatIdent_5ED78;while true do if ((1==FlatIdent_3B98B) or (1331==3051)) then while true do if ((2972==2972) and (FlatIdent_58915==0)) then FlatIdent_5ED78=0;while true do if ((53==53) and (FlatIdent_5ED78==0)) then Cls[DIP]=NStk[DIP];Upv[1]=Cls;break;end end break;end end break;end if ((3006<3824) and (FlatIdent_3B98B==0)) then FlatIdent_58915=0;FlatIdent_5ED78=nil;FlatIdent_3B98B=1;end end end break;end if ((2101==2101) and (FlatIdent_64EBD==0)) then local FlatIdent_32245=0;local FlatIdent_6A69;while true do if ((FlatIdent_32245==0) or (4451>4834)) then FlatIdent_6A69=0;while true do if ((FlatIdent_6A69==0) or (1888==2327)) then Upv=List[Idz];NStk=Upv[1];FlatIdent_6A69=1;end if ((FlatIdent_6A69==1) or (1005>=2121)) then FlatIdent_64EBD=1;break;end end break;end end end end break;end end break;end end end break;end end break;end if ((FlatIdent_850EE==0) or (4426<=3395)) then local FlatIdent_6F921=0;while true do if ((3563>257) and (FlatIdent_6F921==1)) then FlatIdent_850EE=1;break;end if ((FlatIdent_6F921==0) or (617>=1505)) then FlatIdent_4D5FF=0;List=nil;FlatIdent_6F921=1;end end end end end break;end end break;end end elseif ((Enum>3) or (3548<3345)) then local FlatIdent_54BDC=0;local A;local C;local CB;local Result;local R;while true do if ((2==FlatIdent_54BDC) or (2314>4158)) then for Idx=1,C do Stk[CB + Idx]=Result[Idx];end R=Result[1];FlatIdent_54BDC=3;end if ((2284<3557) and (FlatIdent_54BDC==0)) then A=Inst[2];C=Inst[4];FlatIdent_54BDC=1;end if ((FlatIdent_54BDC==3) or (3143>=3447)) then if ((1695<4627) and R) then local FlatIdent_E1E8=0;local FlatIdent_82C7A;local FlatIdent_7D702;while true do if ((FlatIdent_E1E8==0) or (2366>3147)) then FlatIdent_82C7A=0;FlatIdent_7D702=nil;FlatIdent_E1E8=1;end if ((FlatIdent_E1E8==1) or (4766<2684)) then while true do if ((4880>4842) and (FlatIdent_82C7A==0)) then FlatIdent_7D702=0;while true do if ((3362>2759) and (FlatIdent_7D702==0)) then Stk[CB]=R;VIP=Inst[3];break;end end break;end end break;end end else VIP=VIP + 1;end break;end if ((4087>=1154) and (FlatIdent_54BDC==1)) then CB=A + 2;Result={Stk[A](Stk[A + 1],Stk[CB])};FlatIdent_54BDC=2;end end else local FlatIdent_61F31=0;local FlatIdent_30A68;local A;local Results;local Limit;local Edx;while true do if ((FlatIdent_61F31==2) or (415>2816)) then Edx=nil;while true do if ((FlatIdent_30A68==1) or (566>2475)) then local FlatIdent_117A7=0;while true do if ((FlatIdent_117A7==0) or (1622<381)) then local FlatIdent_8AB99=0;while true do if ((1612<2420) and (1==FlatIdent_8AB99)) then FlatIdent_117A7=1;break;end if ((3359==3359) and (FlatIdent_8AB99==0)) then Top=(Limit + A) -1;Edx=0;FlatIdent_8AB99=1;end end end if ((2058==2058) and (FlatIdent_117A7==1)) then FlatIdent_30A68=2;break;end end end if ((FlatIdent_30A68==0) or (3603<=299)) then local FlatIdent_3B6BE=0;while true do if ((747<2249) and (FlatIdent_3B6BE==1)) then FlatIdent_30A68=1;break;end if ((109<=4275) and (FlatIdent_3B6BE==0)) then A=Inst[2];Results,Limit=_R(Stk[A](Unpack(Stk,A + 1,Top)));FlatIdent_3B6BE=1;end end end if ((FlatIdent_30A68==2) or (4474<1597)) then for Idx=A,Top do local FlatIdent_93F5B=0;local FlatIdent_3BB56;while true do if ((1736<4570) and (FlatIdent_93F5B==0)) then FlatIdent_3BB56=0;while true do if ((176<=4716) and (FlatIdent_3BB56==0)) then Edx=Edx + 1;Stk[Idx]=Results[Edx];break;end end break;end end end break;end end break;end if ((3288==3288) and (FlatIdent_61F31==0)) then local FlatIdent_948B7=0;while true do if ((1336<2267) and (FlatIdent_948B7==0)) then FlatIdent_30A68=0;A=nil;FlatIdent_948B7=1;end if ((FlatIdent_948B7==1) or (2953<=2728)) then FlatIdent_61F31=1;break;end end end if ((FlatIdent_61F31==1) or (2042<=707)) then Results=nil;Limit=nil;FlatIdent_61F31=2;end end end elseif ((Enum<=7) or (3450<1317)) then if ((1551==1551) and (Enum<=5)) then Stk[Inst[2]]=Inst[3];elseif ((4760>2536) and (Enum>6)) then local FlatIdent_11BB8=0;local FlatIdent_35C84;local A;local Results;local Edx;while true do if ((FlatIdent_11BB8==1) or (1188>2272)) then Results=nil;Edx=nil;FlatIdent_11BB8=2;end if ((1796<=2749) and (0==FlatIdent_11BB8)) then local FlatIdent_53CE7=0;while true do if ((490<3322) and (FlatIdent_53CE7==0)) then FlatIdent_35C84=0;A=nil;FlatIdent_53CE7=1;end if ((836==836) and (1==FlatIdent_53CE7)) then FlatIdent_11BB8=1;break;end end end if ((FlatIdent_11BB8==2) or (4658<3480)) then while true do if ((FlatIdent_35C84==1) or (1363==891)) then Edx=0;for Idx=A,Inst[4] do local FlatIdent_719C6=0;while true do if ((4351==4351) and (FlatIdent_719C6==0)) then Edx=Edx + 1;Stk[Idx]=Results[Edx];break;end end end break;end if ((2146==2146) and (FlatIdent_35C84==0)) then local FlatIdent_2879C=0;local FlatIdent_56387;while true do if ((2462<=2783) and (0==FlatIdent_2879C)) then FlatIdent_56387=0;while true do if ((FlatIdent_56387==1) or (1530==4399)) then FlatIdent_35C84=1;break;end if ((FlatIdent_56387==0) or (1582==1494)) then local FlatIdent_71AD8=0;while true do if ((1883<=4365) and (1==FlatIdent_71AD8)) then FlatIdent_56387=1;break;end if ((FlatIdent_71AD8==0) or (4541<=1600)) then A=Inst[2];Results={Stk[A](Unpack(Stk,A + 1,Top))};FlatIdent_71AD8=1;end end end end break;end end end end break;end end else local FlatIdent_95D6C=0;local FlatIdent_45818;local FlatIdent_8971E;local A;while true do if ((FlatIdent_95D6C==1) or (3482==1484)) then A=nil;while true do if ((2701>513) and (FlatIdent_45818==0)) then FlatIdent_8971E=0;A=nil;FlatIdent_45818=1;end if ((194<2767) and (FlatIdent_45818==1)) then while true do if ((4635==4635) and (FlatIdent_8971E==0)) then A=Inst[2];Stk[A]=Stk[A]();break;end end break;end end break;end if ((721<=4176) and (FlatIdent_95D6C==0)) then FlatIdent_45818=0;FlatIdent_8971E=nil;FlatIdent_95D6C=1;end end end elseif ((Enum<=8) or (4168>=4997)) then local FlatIdent_38CE3=0;local FlatIdent_318DE;local FlatIdent_5EB38;local A;local B;while true do if ((2396<4350) and (FlatIdent_38CE3==1)) then A=nil;B=nil;FlatIdent_38CE3=2;end if ((1479<=3772) and (FlatIdent_38CE3==2)) then while true do if ((620==620) and (FlatIdent_318DE==1)) then B=nil;while true do if ((FlatIdent_5EB38==0) or (3632<=2961)) then local FlatIdent_5901B=0;while true do if ((1==FlatIdent_5901B) or (3777<=333)) then FlatIdent_5EB38=1;break;end if ((3419<4151) and (FlatIdent_5901B==0)) then A=Inst[2];B=Stk[Inst[3]];FlatIdent_5901B=1;end end end if ((1729<2576) and (FlatIdent_5EB38==1)) then Stk[A + 1]=B;Stk[A]=B[Inst[4]];break;end end break;end if ((2980<=4658) and (0==FlatIdent_318DE)) then local FlatIdent_9908C=0;while true do if ((4412==4412) and (FlatIdent_9908C==1)) then FlatIdent_318DE=1;break;end if ((FlatIdent_9908C==0) or (3946<=3249)) then FlatIdent_5EB38=0;A=nil;FlatIdent_9908C=1;end end end end break;end if ((3114>1056) and (FlatIdent_38CE3==0)) then FlatIdent_318DE=0;FlatIdent_5EB38=nil;FlatIdent_38CE3=1;end end elseif ((Enum>9) or (4995<3851)) then local FlatIdent_77B8F=0;local B;while true do if ((4457==4457) and (FlatIdent_77B8F==0)) then B=Stk[Inst[4]];if ( not B or (4250<4149)) then VIP=VIP + 1;else local FlatIdent_85EE2=0;local FlatIdent_6BB58;local FlatIdent_21F3B;while true do if ((FlatIdent_85EE2==0) or (3489==4333)) then FlatIdent_6BB58=0;FlatIdent_21F3B=nil;FlatIdent_85EE2=1;end if ((237<1145) and (FlatIdent_85EE2==1)) then while true do if ((2797>2711) and (FlatIdent_6BB58==0)) then FlatIdent_21F3B=0;while true do if ((FlatIdent_21F3B==0) or (2334<663)) then Stk[Inst[2]]=B;VIP=Inst[3];break;end end break;end end break;end end end break;end end else Stk[Inst[2]]={};end elseif ((4303==4303) and (Enum<=16)) then if ((1052<1121) and (Enum<=13)) then if ((2099==2099) and (Enum<=11)) then for Idx=Inst[2],Inst[3] do Stk[Idx]=nil;end elseif ((2631>532) and (Enum==12)) then Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];else local FlatIdent_6E4D0=0;local FlatIdent_32240;local A;while true do if ((1188==1188) and (FlatIdent_6E4D0==0)) then FlatIdent_32240=0;A=nil;FlatIdent_6E4D0=1;end if ((FlatIdent_6E4D0==1) or (4178<93)) then while true do if ((495<=3979) and (FlatIdent_32240==0)) then A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1,Top));break;end end break;end end end elseif ((4416==4416) and (Enum<=14)) then Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];elseif ((Enum>15) or (1242>=4540)) then local FlatIdent_7401F=0;local FlatIdent_33740;local FlatIdent_810F3;local NewProto;local NewUvals;local Indexes;while true do if ((4862>=4036) and (FlatIdent_7401F==1)) then NewProto=nil;NewUvals=nil;FlatIdent_7401F=2;end if ((FlatIdent_7401F==2) or (2375==1402)) then Indexes=nil;while true do if ((FlatIdent_33740==2) or (2810<=482)) then while true do if ((151<=2291) and (FlatIdent_810F3==0)) then local FlatIdent_2D2EB=0;while true do if ((FlatIdent_2D2EB==0) or (3601==1526)) then local FlatIdent_70C5D=0;while true do if ((FlatIdent_70C5D==0) or (4150<=1599)) then NewProto=Proto[Inst[3]];NewUvals=nil;FlatIdent_70C5D=1;end if ((4413>1113) and (FlatIdent_70C5D==1)) then FlatIdent_2D2EB=1;break;end end end if ((2792<4171) and (FlatIdent_2D2EB==1)) then FlatIdent_810F3=1;break;end end end if ((1==FlatIdent_810F3) or (449==4788)) then local FlatIdent_1642E=0;while true do if ((FlatIdent_1642E==0) or (2606==520)) then local FlatIdent_1D5D8=0;while true do if ((3079>2309) and (1==FlatIdent_1D5D8)) then FlatIdent_1642E=1;break;end if ((FlatIdent_1D5D8==0) or (85>1625)) then Indexes={};NewUvals=Setmetatable({},{__index=function(_,Key)local FlatIdent_905C1=0;local FlatIdent_848E6;local FlatIdent_5E1A2;local Val;while true do if ((44==44) and (FlatIdent_905C1==1)) then Val=nil;while true do if ((4122==4122) and (FlatIdent_848E6==0)) then FlatIdent_5E1A2=0;Val=nil;FlatIdent_848E6=1;end if ((FlatIdent_848E6==1) or (472>2835)) then while true do if ((FlatIdent_5E1A2==0) or (1654>4305)) then local FlatIdent_967B9=0;local FlatIdent_6228C;while true do if ((4712>1121) and (FlatIdent_967B9==0)) then FlatIdent_6228C=0;while true do if ((FlatIdent_6228C==0) or (1189>3634)) then Val=Indexes[Key];return Val[1][Val[2]];end end break;end end end end break;end end break;end if ((3984>=1946) and (FlatIdent_905C1==0)) then FlatIdent_848E6=0;FlatIdent_5E1A2=nil;FlatIdent_905C1=1;end end end,__newindex=function(_,Key,Value)local FlatIdent_3FEF2=0;local FlatIdent_1C25;local FlatIdent_605CB;local Val;while true do if ((FlatIdent_3FEF2==0) or (1896<=1027)) then FlatIdent_1C25=0;FlatIdent_605CB=nil;FlatIdent_3FEF2=1;end if ((1497>=267) and (FlatIdent_3FEF2==1)) then Val=nil;while true do if ((1551==1551) and (FlatIdent_1C25==1)) then while true do if ((FlatIdent_605CB==0) or (2125>=3349)) then Val=Indexes[Key];Val[1][Val[2]]=Value;break;end end break;end if ((1376<=1500) and (FlatIdent_1C25==0)) then local FlatIdent_909EE=0;while true do if ((FlatIdent_909EE==1) or (1908>=2810)) then FlatIdent_1C25=1;break;end if ((FlatIdent_909EE==0) or (1468>4922)) then FlatIdent_605CB=0;Val=nil;FlatIdent_909EE=1;end end end end break;end end end});FlatIdent_1D5D8=1;end end end if ((FlatIdent_1642E==1) or (3726==508)) then FlatIdent_810F3=2;break;end end end if ((1562<4323) and (FlatIdent_810F3==2)) then for Idx=1,Inst[4] do local FlatIdent_191E6=0;local Mvm;while true do if ((158<784) and (FlatIdent_191E6==0)) then local FlatIdent_330C9=0;while true do if ((FlatIdent_330C9==0) or (2236<1934)) then VIP=VIP + 1;Mvm=Instr[VIP];FlatIdent_330C9=1;end if ((2929==2929) and (FlatIdent_330C9==1)) then FlatIdent_191E6=1;break;end end end if ((1==FlatIdent_191E6) or (3808>=4354)) then if ((Mvm[1]==45) or (216>3267)) then Indexes[Idx-1]={Stk,Mvm[3]};else Indexes[Idx-1]={Upvalues,Mvm[3]};end Lupvals[ #Lupvals + 1]=Indexes;break;end end end Stk[Inst[2]]=Wrap(NewProto,NewUvals,Env);break;end end break;end if ((1945>573) and (0==FlatIdent_33740)) then local FlatIdent_340B5=0;while true do if ((FlatIdent_340B5==1) or (3025<=119)) then FlatIdent_33740=1;break;end if ((3650>1688) and (FlatIdent_340B5==0)) then FlatIdent_810F3=0;NewProto=nil;FlatIdent_340B5=1;end end end if ((3725>=2432) and (FlatIdent_33740==1)) then NewUvals=nil;Indexes=nil;FlatIdent_33740=2;end end break;end if ((621<4440) and (FlatIdent_7401F==0)) then FlatIdent_33740=0;FlatIdent_810F3=nil;FlatIdent_7401F=1;end end else Stk[Inst[2]]=Env[Inst[3]];end elseif ((4928>1404) and (Enum<=19)) then if ((3414<3835) and (Enum<=17)) then local FlatIdent_50872=0;local A;while true do if ((2117<3158) and (FlatIdent_50872==0)) then A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1,Inst[3]));break;end end elseif ((Enum>18) or (2147<1889)) then Stk[Inst[2]]=Stk[Inst[3]]%Inst[4];elseif ((2391<3784) and (Inst[2]==Stk[Inst[4]])) then VIP=VIP + 1;else VIP=Inst[3];end elseif ((3450==3450) and (Enum<=20)) then Stk[Inst[2]]=Inst[3] + Stk[Inst[4]];elseif ((4481>636) and (Enum==21)) then local FlatIdent_5A6C6=0;local A;while true do if ((FlatIdent_5A6C6==0) or (2341>4683)) then A=Inst[2];Stk[A](Unpack(Stk,A + 1,Top));break;end end else Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];end elseif ((618<3347) and (Enum<=34)) then if ((Enum<=28) or (4207<47)) then if ((4935>=298) and (Enum<=25)) then if ((Enum<=23) or (4391==4901)) then Stk[Inst[2]][Inst[3]]=Inst[4];elseif ((4731<4934) and (Enum==24)) then local FlatIdent_45B9D=0;local FlatIdent_60979;local A;while true do if ((1396<=2818) and (FlatIdent_45B9D==0)) then FlatIdent_60979=0;A=nil;FlatIdent_45B9D=1;end if ((1==FlatIdent_45B9D) or (2931<=475)) then while true do if ((FlatIdent_60979==0) or (285>=4188)) then A=Inst[2];Stk[A](Stk[A + 1]);break;end end break;end end else VIP=Inst[3];end elseif ((Enum<=26) or (2095>4580)) then Upvalues[Inst[3]]=Stk[Inst[2]];elseif ((2733<3107) and (Enum==27)) then Stk[Inst[2]]();else Stk[Inst[2]]=Stk[Inst[3]]%Stk[Inst[4]];end elseif ((4353>2322) and (Enum<=31)) then if ((Enum<=29) or (2735>4016)) then Stk[Inst[2]]=Upvalues[Inst[3]];elseif ((Enum==30) or (4445<3249)) then local FlatIdent_42E13=0;local FlatIdent_88374;local A;local Results;local Limit;local Edx;while true do if ((FlatIdent_42E13==1) or (3524>=4607)) then Results=nil;Limit=nil;FlatIdent_42E13=2;end if ((0==FlatIdent_42E13) or (4570>=4673)) then local FlatIdent_7FE51=0;while true do if ((4752>=813) and (0==FlatIdent_7FE51)) then FlatIdent_88374=0;A=nil;FlatIdent_7FE51=1;end if ((4862==4862) and (FlatIdent_7FE51==1)) then FlatIdent_42E13=1;break;end end end if ((FlatIdent_42E13==2) or (3440>=4497)) then Edx=nil;while true do if ((FlatIdent_88374==0) or (2372<=1431)) then local FlatIdent_94AC=0;local FlatIdent_1DF46;while true do if ((4840>2961) and (FlatIdent_94AC==0)) then FlatIdent_1DF46=0;while true do if ((3150<3482) and (FlatIdent_1DF46==0)) then A=Inst[2];Results,Limit=_R(Stk[A](Stk[A + 1]));FlatIdent_1DF46=1;end if ((FlatIdent_1DF46==1) or (3896<=1540)) then FlatIdent_88374=1;break;end end break;end end end if ((FlatIdent_88374==2) or (2365<=1838)) then for Idx=A,Top do local FlatIdent_92E94=0;local FlatIdent_89BE4;local FlatIdent_1EE85;while true do if ((2474>=253) and (0==FlatIdent_92E94)) then FlatIdent_89BE4=0;FlatIdent_1EE85=nil;FlatIdent_92E94=1;end if ((4248>816) and (1==FlatIdent_92E94)) then while true do if ((FlatIdent_89BE4==0) or (3917<=370)) then FlatIdent_1EE85=0;while true do if ((1715<=4668) and (0==FlatIdent_1EE85)) then Edx=Edx + 1;Stk[Idx]=Results[Edx];break;end end break;end end break;end end end break;end if ((4321>509) and (FlatIdent_88374==1)) then local FlatIdent_6F1B5=0;while true do if ((FlatIdent_6F1B5==1) or (4892<2115)) then FlatIdent_88374=2;break;end if ((1605<=2262) and (FlatIdent_6F1B5==0)) then Top=(Limit + A) -1;Edx=0;FlatIdent_6F1B5=1;end end end end break;end end else Stk[Inst[2]]=Inst[3]~=0;end elseif ((Enum<=32) or (1384>1668)) then Stk[Inst[2]]=Stk[Inst[3]] -Inst[4];elseif ((3817<4504) and (Enum>33)) then local FlatIdent_193B1=0;local FlatIdent_4BE34;local A;local Results;local Limit;local Edx;while true do if ((FlatIdent_193B1==2) or (3644<=476)) then Edx=nil;while true do if ((968==968) and (FlatIdent_4BE34==0)) then local FlatIdent_934E6=0;local FlatIdent_6D02;while true do if ((FlatIdent_934E6==0) or (841==1929)) then FlatIdent_6D02=0;while true do if ((819<3924) and (0==FlatIdent_6D02)) then A=Inst[2];Results,Limit=_R(Stk[A](Unpack(Stk,A + 1,Inst[3])));FlatIdent_6D02=1;end if ((3781==3781) and (FlatIdent_6D02==1)) then FlatIdent_4BE34=1;break;end end break;end end end if ((FlatIdent_4BE34==1) or (2524>=4611)) then local FlatIdent_5C62D=0;while true do if ((FlatIdent_5C62D==0) or (2772<749)) then local FlatIdent_3E942=0;while true do if ((3656<4180) and (FlatIdent_3E942==0)) then Top=(Limit + A) -1;Edx=0;FlatIdent_3E942=1;end if ((FlatIdent_3E942==1) or (388>=2487)) then FlatIdent_5C62D=1;break;end end end if ((FlatIdent_5C62D==1) or (3511<2174)) then FlatIdent_4BE34=2;break;end end end if ((4999>=3694) and (FlatIdent_4BE34==2)) then for Idx=A,Top do local FlatIdent_5114F=0;local FlatIdent_41DA9;while true do if ((FlatIdent_5114F==0) or (3702<=1318)) then FlatIdent_41DA9=0;while true do if ((FlatIdent_41DA9==0) or (2088>2917)) then Edx=Edx + 1;Stk[Idx]=Results[Edx];break;end end break;end end end break;end end break;end if ((2982>1679) and (FlatIdent_193B1==0)) then FlatIdent_4BE34=0;A=nil;FlatIdent_193B1=1;end if ((4376<=4926) and (FlatIdent_193B1==1)) then local FlatIdent_695F5=0;while true do if ((FlatIdent_695F5==1) or (2312==2667)) then FlatIdent_193B1=2;break;end if ((3456>3296) and (FlatIdent_695F5==0)) then Results=nil;Limit=nil;FlatIdent_695F5=1;end end end end else local FlatIdent_2D934=0;local A;while true do if ((3119==3119) and (FlatIdent_2D934==0)) then A=Inst[2];Stk[A]=Stk[A](Stk[A + 1]);break;end end end elseif ((2481>=1807) and (Enum<=40)) then if ((Enum<=37) or (3981<1839)) then if ((3276>1769) and (Enum<=35)) then if ((4852>=4768) and Stk[Inst[2]]) then VIP=VIP + 1;else VIP=Inst[3];end elseif ((4924>=640) and (Enum>36)) then Stk[Inst[2]]=Stk[Inst[3]] + Inst[4];else local FlatIdent_2BF55=0;local FlatIdent_5440D;local A;while true do if ((FlatIdent_2BF55==0) or (953<=807)) then FlatIdent_5440D=0;A=nil;FlatIdent_2BF55=1;end if ((FlatIdent_2BF55==1) or (4160==4006)) then while true do if ((FlatIdent_5440D==0) or (2432>4307)) then A=Inst[2];do return Unpack(Stk,A,Top);end break;end end break;end end end elseif ((3369==3369) and (Enum<=38)) then Stk[Inst[2]]= #Stk[Inst[3]];elseif ((Enum>39) or (3314<344)) then local FlatIdent_243DA=0;local FlatIdent_945B3;local A;local Step;local Index;while true do if ((FlatIdent_243DA==2) or (3516<2136)) then while true do if ((FlatIdent_945B3==2) or (1386>=2816)) then if ((Step>0) or (4392<98)) then if ((1541<=4491) and (Index<=Stk[A + 1])) then local FlatIdent_924F7=0;local FlatIdent_4B110;local FlatIdent_47C76;while true do if ((FlatIdent_924F7==1) or (3930==2693)) then while true do if ((2800<4157) and (FlatIdent_4B110==0)) then FlatIdent_47C76=0;while true do if ((1286>=849) and (FlatIdent_47C76==0)) then VIP=Inst[3];Stk[A + 3]=Index;break;end end break;end end break;end if ((2911<4255) and (FlatIdent_924F7==0)) then FlatIdent_4B110=0;FlatIdent_47C76=nil;FlatIdent_924F7=1;end end end elseif ((Index>=Stk[A + 1]) or (2721==2153)) then local FlatIdent_392A5=0;local FlatIdent_21F15;local FlatIdent_61B4B;while true do if ((FlatIdent_392A5==0) or (3812>=3936)) then FlatIdent_21F15=0;FlatIdent_61B4B=nil;FlatIdent_392A5=1;end if ((1412<4297) and (FlatIdent_392A5==1)) then while true do if ((FlatIdent_21F15==0) or (3679<=2170)) then FlatIdent_61B4B=0;while true do if ((0==FlatIdent_61B4B) or (3081>3902)) then VIP=Inst[3];Stk[A + 3]=Index;break;end end break;end end break;end end end break;end if ((FlatIdent_945B3==1) or (737>=3320)) then local FlatIdent_8545F=0;while true do if ((1848>=1307) and (FlatIdent_8545F==0)) then Index=Stk[A] + Step;Stk[A]=Index;FlatIdent_8545F=1;end if ((906==906) and (FlatIdent_8545F==1)) then FlatIdent_945B3=2;break;end end end if ((2737<=3842) and (FlatIdent_945B3==0)) then A=Inst[2];Step=Stk[A + 2];FlatIdent_945B3=1;end end break;end if ((2904==2904) and (FlatIdent_243DA==1)) then Step=nil;Index=nil;FlatIdent_243DA=2;end if ((FlatIdent_243DA==0) or (1047==1152)) then FlatIdent_945B3=0;A=nil;FlatIdent_243DA=1;end end elseif ((2089<=3531) and (Stk[Inst[2]]==Inst[4])) then VIP=VIP + 1;else VIP=Inst[3];end elseif ((186<=1655) and (Enum<=43)) then if ((Enum<=41) or (4907<=2083)) then Stk[Inst[2]][Inst[3]]=Stk[Inst[4]];elseif ((Enum==42) or (2338<=1101)) then local FlatIdent_1EA96=0;local FlatIdent_34EE8;local A;local Index;local Step;while true do if ((342<863) and (FlatIdent_1EA96==0)) then local FlatIdent_1F648=0;while true do if ((1106<1204) and (FlatIdent_1F648==0)) then FlatIdent_34EE8=0;A=nil;FlatIdent_1F648=1;end if ((FlatIdent_1F648==1) or (2328>4755)) then FlatIdent_1EA96=1;break;end end end if ((FlatIdent_1EA96==2) or (4285<1779)) then while true do if ((FlatIdent_34EE8==1) or (2628==4773)) then Step=Stk[A + 2];if ((2750==2750) and (Step>0)) then if ((2420>2014) and (Index>Stk[A + 1])) then VIP=Inst[3];else Stk[A + 3]=Index;end elseif ((Index<Stk[A + 1]) or (501==4076)) then VIP=Inst[3];else Stk[A + 3]=Index;end break;end if ((2085<2096) and (FlatIdent_34EE8==0)) then local FlatIdent_20475=0;local FlatIdent_4F373;while true do if ((FlatIdent_20475==0) or (2351>2826)) then FlatIdent_4F373=0;while true do if ((FlatIdent_4F373==0) or (4866==4697)) then local FlatIdent_21B5=0;while true do if ((3811==3811) and (FlatIdent_21B5==0)) then A=Inst[2];Index=Stk[A];FlatIdent_21B5=1;end if ((FlatIdent_21B5==1) or (801==4139)) then FlatIdent_4F373=1;break;end end end if ((FlatIdent_4F373==1) or (413>2214)) then FlatIdent_34EE8=1;break;end end break;end end end end break;end if ((3973==3973) and (FlatIdent_1EA96==1)) then local FlatIdent_88FCB=0;while true do if ((FlatIdent_88FCB==1) or (2744<1785)) then FlatIdent_1EA96=2;break;end if ((1661<=4229) and (0==FlatIdent_88FCB)) then Index=nil;Step=nil;FlatIdent_88FCB=1;end end end end else Stk[Inst[2]]=Wrap(Proto[Inst[3]],nil,Env);end elseif ((1918==1918) and (Enum<=44)) then Stk[Inst[2]][Stk[Inst[3]]]=Inst[4];elseif ((Enum>45) or (3328==1621)) then do return;end else Stk[Inst[2]]=Stk[Inst[3]];end VIP=VIP + 1;break;end end break;end end break;end end end end A,B=_R(PCall(Loop));if  not A[1] then local FlatIdent_6CF9A=0;local line;while true do if (FlatIdent_6CF9A==0) then line=Chunk[4][VIP] or "?";error("Script error at ["   .. line   .. "]:"   .. A[2]);break;end end else return Unpack(A,2,B);end end;end;return Wrap(Deserialize(),{},vmenv)(...);end end end VMCalletFEnv(),...);end
